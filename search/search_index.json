{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Tech notes","text":"<p>A place to keep random techie details from the day to day.</p>"},{"location":"#linux-ie-stuff","title":"Linux-ie stuff","text":"<ul> <li>ansible</li> <li>asterisk</li> <li>docker</li> <li>git</li> <li>pi-hole</li> <li>proxmox</li> <li>linux commands</li> <li>postfix</li> <li>tmux and screen</li> <li>vim</li> </ul>"},{"location":"#network-ie-stuff","title":"Network-ie stuff","text":"<ul> <li>General</li> <li>urbackup</li> </ul>"},{"location":"#windows-ie-stuff","title":"Windows-ie stuff","text":"<ul> <li>windows tips and tricks</li> <li>WSL</li> <li>MS exchange</li> <li>VirtualBox</li> </ul>"},{"location":"#programming-which-i-do-not-do-much-of-these-days","title":"Programming - which I do not do much of these days","text":"<p>python squeezes</p>"},{"location":"#audio-and-video","title":"Audio and Video","text":"<p>Audio and Video</p>"},{"location":"#project-and-organizational-related","title":"Project and organizational related","text":"<p>Project management</p>"},{"location":"ansible/","title":"Ansible","text":""},{"location":"ansible/#convert-inventory-ini-to-yaml-or-json","title":"Convert inventory ini to yaml or json","text":"Format Command yaml <code>ansible-inventory -i inventory.ini -y --list &gt; inventory.yaml</code> json <code>ansible-inventory -i inventory.ini --list &gt; inventory.yaml</code>"},{"location":"ansible/#cache-ssh-passphrase","title":"Cache ssh passphrase","text":"<p><code>eval \"$(ssh-agent -s)\" &amp;&amp; ssh-agent add ~/.ssh/id_rsa</code></p>"},{"location":"ansible/#linode-deployment","title":"Linode deployment","text":"<p><code>https://www.linode.com/docs/guides/deploy-linodes-using-ansible/</code></p>"},{"location":"ansible/#adding-hostname-with-hard-coded-ip-addresses-in-inventory-file","title":"Adding hostname with hard coded IP addresses in inventory file","text":"<p><code>server1 ansible_host=192.168.45.12</code></p>"},{"location":"ansible/#using-apt-key","title":"Using apt-key","text":"<p>Which is being deprecated.</p>"},{"location":"ansible/#semaphore-ansible-gui","title":"Semaphore ansible GUI","text":"<p>on my investigate and test list</p>"},{"location":"asterisk/","title":"Asterisk","text":""},{"location":"asterisk/#incrediblepbx-specific","title":"incrediblepbx specific","text":"<ul> <li>Remove annoying firewall prompt</li> </ul> <p>Edit /root/.bashrc_profile PS1</p>"},{"location":"asterisk/#freepbx-specific","title":"FreePBX specific","text":""},{"location":"asterisk/#reset-ari-username-and-password","title":"Reset ARI username and password","text":"<pre><code>fwconsole setting FPBX_ARI_USER 15-char-alphanum-string\nfwconsole setting FPBX_ARI_PASSWORD 30-char-alphanum-string\nfwconsole r\nfwconsole restart\n</code></pre>"},{"location":"audio_video/","title":"Audio/Video","text":""},{"location":"audio_video/#increase-volume-with-ffmpeg","title":"increase volume with ffmpeg","text":"<p><code>ffmpeg -i input.mkv -filter:a \"volume=4.0\" output.mkv</code></p>"},{"location":"audio_video/#convert-all-avi-files-to-mkv","title":"Convert all .avi files to .mkv","text":"<p><code>for i in *.avi; do ffmpeg -i \"$i\" \"${i%.*}.mkv\"; done</code></p>"},{"location":"audio_video/#re-encode-a-directory-tree-to-h265-recursively","title":"Re-encode a directory tree to H265 recursively","text":"<p><code>find /path/to/media -iname '*.mkv' -exec ffmpeg -n -i '{}' -map 0 -map_metadata 0 -c:v libx265 -crf 24 -preset veryslow -c:a libopus -scodec copy '{}'.h265 \\;</code></p>"},{"location":"docker/","title":"Docker","text":""},{"location":"docker/#display-the-container-name-and-associated-ip-address","title":"Display the container name and associated IP address.","text":"<p><code>docker ps | awk '{print $1}' |grep -v CONTAINER |xargs docker inspect |grep -E -w 'Name|IPAddress'</code></p> <p>netshoot</p>"},{"location":"exchange/","title":"Exchange","text":"<p>Change your Microsoft 365 email address to use your custom domain</p>"},{"location":"git/","title":"Git","text":""},{"location":"git/#undo-a-git-add-before-a-commit","title":"Undo a git add before a commit","text":"<p>Run <code>git reset &lt;file&gt;</code> or <code>git reset</code> to unstage all changes.</p> <p>In older versions of git, the commands were git reset HEAD  and git reset HEAD respectively. This was changed in Git 1.8.2"},{"location":"git/#removing-a-filedirectory-from-git-without-deleting-it","title":"Removing a file/directory from git without deleting it.","text":"<p>A file/directory (e.g. tmp) has been added to .gitignore but still shows in <code>git status</code></p> <p><code>git rm -r --cached tmp</code></p>"},{"location":"git/#dealing-with-a-diverging-branch-and-re-syncing","title":"Dealing with a diverging branch and re-syncing","text":"<p>fatal: The upstream branch of your current branch does not match the name of your current branch.  To push to the upstream branch on the remote, use</p> <pre><code>`git push origin HEAD:ref/heads/main`\n</code></pre> <p>To push to the branch of the same name on the remote, use</p> <pre><code>`git push origin HEAD`\n</code></pre> <p>To choose either option permanently, see push.default in 'git help config'.</p> <p><code>$ git push origin HEAD</code></p>"},{"location":"git/#ecsa-key-error-connecting-to-githubcom","title":"ECSA key error connecting to github.com","text":"<p>Remove the key:</p> <p><code>sed -i -e '/AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31\\/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi\\/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==/d' ~/.ssh/known_hosts</code></p>"},{"location":"linux_cmds/","title":"Linux command line-fu","text":"<p>Some/many of these are quite dated but I preserve them nonetheless.</p>"},{"location":"linux_cmds/#journal-log-management","title":"journal log management","text":"<p>Current usage of journal files</p> <p><code>sudo journalctl --disk-usage</code></p> <p>One time rotate out journal files until current remaining is 500M</p> <p><code>sudo journalctl --rotate --vacuum-size=500M</code></p> <p>Set ongoing limit to 500M</p> <p><code>SysemMaxUse=500M</code> in <code>/etc/systemd/journald.conf</code></p>"},{"location":"linux_cmds/#xargs-dealing-with-spaces","title":"xargs dealing with spaces","text":"<p>Specify the delimiter as only newline.</p> <p><code>xargs -d \"\\n\"</code></p>"},{"location":"linux_cmds/#find-all-symlinks","title":"Find all symlinks.","text":"<p>Useful if, for example, you destroyed all of them on a filesystem you were trying to migrate from one hard disk to another and now you need to recover them from the backup that you did take before being an idiot:</p> <p><code>find / -type l -exec ls -l {} \\;</code></p> <p>When copying from one volume to another:</p> <p><code>cp -ax /&lt;source&gt; /&lt;destination&gt;</code></p>"},{"location":"linux_cmds/#copy-mbr-with-and-without-partition-table","title":"Copy MBR with and without partition table","text":"<p><code>dd if=/dev/hda of=/dev/hdb bs=512 count=1</code> <code>dd if=/dev/hda of=/dev/hdb bs=446 count=1</code></p>"},{"location":"linux_cmds/#remove-all-non-current-kernel-packages-on-ubuntu","title":"Remove all non-current kernel packages on Ubuntu:","text":"<p><code>dpkg -l linux-* | awk '/^ii/{ print $2}' | grep -v -e</code>uname -r | cut -f1,2 -d\"-\"<code>| grep -e [0-9] | xargs sudo apt-get -y purge</code></p>"},{"location":"linux_cmds/#monitor-progress-of-dd-action","title":"Monitor progress of dd action","text":"<p><code>while pgrep ^dd; do pkill -INFO dd; sleep 10; done</code></p>"},{"location":"linux_cmds/#sed-snippet-to-remove-blank-lines-and-those-that-begin-with-a-digit-and-finally-deal-with-unix2dos-carriage-return-monkey-business","title":"sed snippet to remove blank lines and those that begin with a digit, and finally deal with unix2dos carriage return monkey business.","text":"<p><code>sed ''/^$/d /^[0-9]/d s/\\r//g' &lt; input.txt &gt; output.txt</code></p>"},{"location":"logseq/","title":"Logseq","text":""},{"location":"logseq/#general","title":"General","text":"<ul> <li>Getting checklists working = have to CTRL-Enter not Enter   https://www.reddit.com/r/logseq/comments/rw4hnx/how_to_insert_a_plain_checkbox/</li> <li>[ ] Like this</li> <li></li> <li> </li> <li> </li> </ul>"},{"location":"logseq/#customizations","title":"Customizations","text":"<ul> <li>Custom css for tags:</li> <li>```   /Changing tags to have a blue button appearance and be nice and rounded /</li> <li>.tag{ padding:0 7px; border-radius:7px; margin:2px 0; color:white !important; background-color:#2883df}.content   ```</li> </ul>"},{"location":"logseq/#my-use-aka-whats-working-for-me-and-what-aint","title":"My use a.k.a. what's working for me and what ain't","text":""},{"location":"logseq/#things-i-like","title":"Things I like","text":"<ul> <li>Text backend is huge.  My data, I am in control - backups, replication, opening with other tools</li> <li>My three main platforms for daily compute are supported - Windows, Android, IoS</li> <li>Using the journal entries as the main entry point frees the mind from thinking about organization first.  Content first approach appeals to me.</li> <li>I think it is making me capture more \"rough\" content for my future self to access and maybe organize or maybe just have available via search.<ul> <li>Ease of creating tags</li> </ul> </li> </ul>"},{"location":"logseq/#things-i-dont-like-so-far","title":"Things I don't like (so far)","text":"<ul> <li>Blocks of text I want to paste in can't be edited.  This 'everything is an outline' approach is a double edged sword.</li> <li>I don't know enough about the upcoming \"database version\" but I am concerned that it may corrupt the beauty and simplicity of \"text files are the backend\" philosophy.</li> <li>Too many orphaned files seemingly from [[android]] replication is annoying.</li> <li>Many of the articles highlighting what can be done with logseq focus on plugins.  My primary device is my ipad.  Plugins only work on the desktop app.</li> <li>The roadmap and updates from the dev team seem sporadic at best.</li> </ul>"},{"location":"networking/","title":"Networking","text":""},{"location":"networking/#network-notes","title":"Network notes","text":""},{"location":"networking/#private-address-ranges","title":"Private address ranges","text":"RFC 1918 name IP address range Number of addresses Largest CIDR block Host ID size Mask bits description 24 bit block 10.0.0.0-10.255.255.255 16,777,216 10.0.0.8/8 255.0.0.0 24 bits 8 bits single class A network 20 bit block 176.16.0.0-172.31.255.255 1,048,576 176.16.0.0/12 255.240.0.0 20 bits 12 bits 16 contiguous class B networks 16 bit block 192.168.0.0-192.168.255.255 65,536 192.168.0.0/16 255.255.0.0 16 bits 16 bits 256 contiguous class C networks"},{"location":"networking/#network-testing","title":"network testing","text":""},{"location":"networking/#speedtest","title":"speedtest","text":"<ul> <li>without the cruft</li> </ul>"},{"location":"networking/#tls","title":"TLS","text":"<ul> <li>Test certificate chain   <code>openssl\\ s_client\\ -showcerts\\ -connect google.com:443</code></li> </ul>"},{"location":"pihole/","title":"Pihole","text":""},{"location":"pihole/#pihole","title":"PiHole","text":""},{"location":"pihole/#installation","title":"Installation","text":"<p>With curl:</p> <p><code>curl -sSL https://install.pi-hole.net | bash</code></p> <p>With wget:</p> <p><code>wget -O basic-install.sh https://install.pi-hole.net sudo bash basic-install.sh</code></p>"},{"location":"pihole/#configuration","title":"Configuration","text":"<p>Set admin password:</p> <p><code>pihole -a -p</code></p>"},{"location":"postfix/","title":"Postfix","text":""},{"location":"postfix/#gmail-as-relayhost","title":"gmail as relayhost","text":"<p>Enforce tls</p> <p><code>echo \"smtp.gmail.com encrypt\" &gt;&gt; /etc/postfix/tls_policy</code></p> <p><code>postmap /etc/postfix/tls_policy</code></p> <p><code>sudo apt install libsasl2-modules</code></p> <p>in main.cf:</p> <p>smtp_use_tls = yes smtp_sasl_auth_enable = yes smtp_sasl_security_options = noanonymous smtp_sasl_tls_security_options = noanonymous smtp_sasl_password_maps = hash:/etc/postfix/sasl/sasl_passwd smtp_tls_CAfile = /etc/ssl/certs/ca-certificates.crt  </p> <p>Allow non-tls for some relays</p> <p><code>smtp_tls_security_level = may</code></p>"},{"location":"postfix/#direct-some-domains-to-alternate-relayhost","title":"Direct some domains to alternate relayhost","text":"<p>In my case, I route some messages to a mailrise instance on my LAN.</p> <p><code>echo \"mailrise.xyz smtp:mailrise_host\" &gt;&gt; /etc/postfix/transport</code></p> <p><code>postmap /etc/postfix/transport</code></p> <p>Add to /etc/postfix/main.cf:</p> <p><code>transport_maps = hash:/etc/postfix/transport</code></p>"},{"location":"postfix/#managing-the-queue","title":"Managing the queue","text":"<p>mailq equivalent</p> <p><code>postqueue -p</code></p> <p>flush queue</p> <p><code>postqueue -f</code></p> <p>Delete a message from the queue</p> <p><code>postsuper -d &lt;MESSAGEID&gt;</code></p> <p>where MESSAGEID is obtained from <code>postqueue -p</code></p>"},{"location":"projectmgt/","title":"Project Management","text":"<p>I have started using logseq as a personal knowledge base/second brain.  I posted an article on my use thereof: here</p>"},{"location":"projectmgt/#kanban","title":"Kanban","text":""},{"location":"projectmgt/#references","title":"references","text":"<p>Learn kanban from a coffee shop</p>"},{"location":"projectmgt/#software-solutions","title":"software solutions","text":"<ul> <li>Trello</li> <li>Kanban Zone</li> <li>Teamhood</li> </ul> <p>Online gantt chart tool</p>"},{"location":"proxmox/","title":"Proxmox","text":""},{"location":"proxmox/#post-install-scripts","title":"Post install scripts","text":"<p>From https://tteck.github.io/Proxmox/:</p> <p><code>bash -c \"$(wget -qLO - https://github.com/tteck/Proxmox/raw/main/misc/post-pve-install.sh)\"</code></p>"},{"location":"proxmox/#removing-the-subscription-nag","title":"Removing the subscription nag","text":"<p>My ansible script</p> <p>https://github.com/foundObjects/pve-nag-buster</p>"},{"location":"proxmox/#other-hints-and-reminders","title":"Other hints and reminders","text":"<p>Import qcow2 images</p> <p>Slow boot times on containers?  Change IPv6 to SLAAC.</p> <p>Resolve error: You have not turned on protection against thin pools running out of space.</p> <p>Adding new thinpool</p> <p>I found this article very helpful in further automating vm creation with cloudinit.</p>"},{"location":"python/","title":"Python","text":""},{"location":"python/#concatenate-lines-from-a-text-file","title":"concatenate lines from a text file","text":"<p>with open('file.txt') as inputfile:     print ' '.join([line.rstrip('\\n') for line in inputfile])</p>"},{"location":"python/#initial-python-file-template","title":"Initial python file template","text":"<p>def main():     print(\"Hello World!\")</p> <p>if name == \"main\":     main()</p>"},{"location":"python/#generate-a-standalone-executable-from-a-python-script","title":"Generate a standalone executable from a python script","text":"<p>realpython article</p>"},{"location":"python/#using-requests-with-javascript","title":"Using requests with javascript","text":"<p>From this article</p> <p>`from requests_html import HTMLSession</p> <p>session = HTMLSession() r = session.get('http://www.example.com') r.html.render() `</p>"},{"location":"python/#data-science","title":"Data Science","text":"<p>Excel and pandas</p>"},{"location":"tmux/","title":"tmux &amp; screen cheat-sheet","text":""},{"location":"tmux/#other-useful-references","title":"Other useful references:","text":"<p>tmuxcheatsheet.com</p> <p>Credit to: Dayid</p> <p>This helped me years ago when I migrated from screen to tmux and I respectfully preserve it here.</p>"},{"location":"tmux/#screen-and-tmux","title":"screen and tmux","text":"<p>A comparison of the features (or more-so just a table of notes for accessing some of those features) for GNU screen and BSD-licensed tmux.</p> <p>The formatting here is simple enough to understand (I would hope). ^ means ctrl+, so ^x is ctrl+x. M- means meta (generally left-alt or escape)+, so M-x is left-alt+x</p> <p>It should be noted that this is no where near a full feature-set of either group. This - being a cheat-sheet - is just to point out the most very basic features to get you on the road.</p> <p>Trust the developers and manpage writers more than me. This document is originally from 2009 when tmux was still new - since then both of these programs have had many updates and features added (not all of which have been dutifully noted here).</p> Action tmux screen start a new session tmux screen tmux new tmux new-session re-attach a detached session tmux attach screen-r tmux attach-session re-attach an attached session (detaching it from elsewhere) tmux attach -d screen -dr tmux attach-session -d re-attach an attached session (keeping it attached elsewhere) tmux attach screen -x tmux attach-session detach from currently attached session ^b d ^a ^d ^b :detach ^a :detach rename-window to newname ^b ,  ^a A  ^b :rename-window  list windows ^b w ^a w list windows in chooseable menu ^a \" go to window # ^b # ^a # go to last-active window ^b l ^a ^a go to next window ^b n ^a n go to previous window ^b p ^a p see keybindings ^b ? ^a ? list sessions ^b s screen -ls tmux ls tmux list-sessions toggle visual bell ^a ^g create another window ^b c ^a c exit current shell/window ^d ^d split window/pane horizontally ^b \" ^a S split window/pane vertically ^b % ^a <code>|</code> switch to other pane ^b o ^a  kill the current pane ^b x (logout/^D) collapse the current pane/split (but leave processes running) ^a X cycle location of panes ^b ^o swap current pane with previous ^b { swap current pane with next ^b } show time ^b t show numeric values of panes ^b q toggle zoom-state of current pane (maximize/return current pane) ^b z break the current pane out of its window (to form new window) ^b ! re-arrange current panels within same window (different layouts) ^b [space] Kill the current window (and all panes within) ^b killw [target-window] <p>Last Modified: 2017/01/11 URL: http://www.dayid.org/comp/tm.html</p>"},{"location":"urbackup/","title":"Urbackup notes","text":""},{"location":"urbackup/#urbackup-general","title":"urbackup general","text":"<ul> <li>Debian Install guide</li> <li>Where to find configuration files on various clients   | client | location(s) |   | -- | --|   | linux | /usr/local/var/urbackup |   | | /usr/local/etc/urbackup |</li> </ul> <p>(https://forums.urbackup.org/t/location-of-server-ident-key-and-other-configuration-files/9753) - ### Force the removal of a client   <code>sudo systemctl stop urbackupsrv &amp;&amp; sudo urbackupsrv cleanup -a 0% &amp;&amp; sudo systemctl start urbackupsrv</code> </p>"},{"location":"vim/","title":"VIM stuff I usually forget","text":""},{"location":"vim/#commenting-a-number-of-lines","title":"Commenting a number of lines.","text":""},{"location":"vim/#theres-a-vim-plugin-for-that","title":"There's a vim plugin for that....","text":"<p>vim commentary</p>"},{"location":"vim/#the-old-ways","title":"The Old ways","text":"<p>First, move the cursor to the first char of the first line in block code you want to comment, then type Ctrl + v.</p> <p>Then vim will go into VISUAL BLOCK mode.</p> <p>Use j to move the cursor down until you reach the last line of your code block. Then type: Shift + i</p> <p>Now vim goes to INSERT mode and the cursor is at the first char of the first line. Finally, type # then ESC and the code block is now commented.</p>"},{"location":"vim/#alternate-way-i-used-to-use","title":"Alternate way I used to use","text":"<p>Select the lines you'd like to comment out Then: <code>:s/^/# /</code></p>"},{"location":"vim/#neovim","title":"neovim","text":""},{"location":"vim/#install-on-debian-based-distro-because-the-package-maintainers-dont-seem-to-include-virsion-9","title":"Install on debian based distro because the package maintainers don't seem to include virsion .9","text":"<p>curl -LO https://github.com/neovim/neovim/releases/latest/download/nvim.appimage chmod u+x nvim.appimage ./nvim.appimage</p> <p>./nvim.appimage --appimage-extract ./squashfs-root/AppRun --version</p>"},{"location":"vim/#optional-exposing-nvim-globally","title":"Optional: exposing nvim globally.","text":"<p>sudo mv squashfs-root / sudo ln -s /squashfs-root/AppRun /usr/bin/nvim nvim</p>"},{"location":"virtualbox/","title":"VirtualBox","text":""},{"location":"virtualbox/#change-the-uuid-of-a-virtual-disk-image","title":"Change the UUID of a virtual disk image","text":"<p><code>vboxmanage.exe internalcommands sethduuid \"windows sandbox.vdi\"</code></p>"},{"location":"windows/","title":"Windows stuff goes here","text":""},{"location":"windows/#disable-bitlocker","title":"Disable Bitlocker","text":"<p>Launch an elevated command prompt and run the command: <code>manage-bde -off C:</code></p>"},{"location":"windows/#lock-screen-images-are-cached-here","title":"Lock screen images are cached here:","text":"<p><code>%LocalAppData%\\Packages\\Microsoft.Windows.ContentDeliveryManager_cw5n1h2txyewy\\LocalState\\Assets</code></p>"},{"location":"windows/#windows-terminal-settingsjson-location","title":"Windows terminal settings.json location","text":"<p><code>$env:LocalAppData\\Packages\\Microsoft.WindowsTerminal_8wekyb3d8bbwe\\LocalState\\settings.json</code></p>"},{"location":"windows/#changing-ctrl-v-and-ctrl-c-behavior-on-windows-terminal-settingsjson-so-vim-keybindings-still-work-for-visual-mode","title":"Changing CTRL-V and CTRL-C behavior on Windows terminal settings.json so vim keybindings still work for visual mode","text":"<pre><code>\"actions\": [\n    {\n        \"command\": \"paste\",\n        \"keys\": \"ctrl+shift+v\"\n    },\n    {\n        \"command\": {\n            \"action\": \"copy\",\n            \"singleLine\": false\n        },\n        \"keys\": \"ctrl+shift+c\"\n    },\n</code></pre>"},{"location":"windows/#moving-the-recovery-partition","title":"Moving the Recovery Partition","text":"<p>https://thedxt.ca/2023/06/moving-windows-recovery-partition-correctly/</p>"},{"location":"wsl/","title":"WSL","text":""},{"location":"wsl/#mount-an-smb-share","title":"Mount an smb share:","text":"<p><code>sudo mkdir /mnt/share</code></p> <p><code>sudo mount -t drvfs '\\\\server\\share' /mnt/share</code></p>"},{"location":"wsl/#getting-systemd-working","title":"Getting systemd working","text":"<p>Set the systemd flag set in your WSL distro settings You will need to edit the wsl.conf file to ensure systemd starts up on boot.</p> <p>Add these lines to the /etc/wsl.conf:</p> <p><code>[boot] systemd=true</code></p> <p>Final steps With the above steps done, close your WSL distro Windows and run wsl.exe --shutdown from PowerShell to restart your WSL instances. Upon launch you should have systemd running. You can check this with the command systemctl list-unit-files --type=service which should show your services\u2019 status.</p>"}]}